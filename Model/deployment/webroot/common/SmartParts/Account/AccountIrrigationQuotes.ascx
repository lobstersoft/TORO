<%@ Control Language="C#" ClassName="AccountIrrigationQuotes" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
  <div class="mainContentHeader"><asp:Label ID="grdrrigationQuotes_lbl" AssociatedControlID="grdrrigationQuotes" runat="server" Text="<%$ resources: grdrrigationQuotes.Caption %>" ></asp:Label></div>
<SalesLogix:SlxGridView runat="server" ID="grdrrigationQuotes" GridLines="None"
AutoGenerateColumns="false" CellPadding="4" CssClass="datagrid" PagerStyle-CssClass="gridPager"
AlternatingRowStyle-CssClass="rowdk" RowStyle-CssClass="rowlt" SelectedRowStyle-CssClass="rowSelected" ShowEmptyTable="true" EnableViewState="false"
 AllowPaging="true" PageSize="20" OnPageIndexChanging="grdrrigationQuotespage_changing"  ExpandableRows="True" ResizableColumns="True"  AllowSorting="true" OnSorting="grdrrigationQuotes_Sorting"  ShowSortIcon="true" >
<Columns>
   <asp:BoundField DataField="DocumentNo"
      HeaderText="<%$ resources: grdrrigationQuotes.114882ec-e3c1-444a-9d38-131808b644ba.ColumnHeading %>"       SortExpression="DocumentNo"    >
      </asp:BoundField>
    <asp:BoundField DataField="IssuedDate"
      HeaderText="<%$ resources: grdrrigationQuotes.1c08936f-5534-4a7c-b924-dbf93ce27dee.ColumnHeading %>"       SortExpression="IssuedDate"    >
      </asp:BoundField>
    <asp:BoundField DataField="QuoteDescription"
      HeaderText="<%$ resources: grdrrigationQuotes.ef0ff4f5-d816-4ee4-96d3-6cee55edfae4.ColumnHeading %>"       SortExpression="QuoteDescription"    >
      </asp:BoundField>
    <asp:BoundField DataField="ValidTo"
      HeaderText="<%$ resources: grdrrigationQuotes.dd9c6117-e554-4018-bd0a-213ffa3addf1.ColumnHeading %>"       SortExpression="ValidTo"    >
      </asp:BoundField>
 </Columns>
    <PagerSettings Mode="NumericFirstLast" FirstPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=Start_16x16" LastPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=End_16x16" />
</SalesLogix:SlxGridView>

<script runat="server" type="text/C#">


protected void grdrrigationQuotespage_changing(object sender, GridViewPageEventArgs e)
{
 grdrrigationQuotes.PageIndex = e.NewPageIndex;
 grdrrigationQuotes.DataBind();
}
protected void grdrrigationQuotes_Sorting(object sender, GridViewSortEventArgs e) { }
</script>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="AccountIrrigationQuotes_RTools" ToolbarLocation="right">
    <asp:ImageButton runat="server" ID="QFButton"
 AlternateText="<%$ resources: QFButton.Caption %>"  ToolTip="<%$ resources: QFButton.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=contract_new_16x16"  />
 
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=AccountIrrigationQuotes&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkAccountIrrigationQuotesHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="AccountIrrigationQuotes" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IAccount); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityListBindingSource _dsrrigationQuotes;
public Sage.Platform.WebPortal.Binding.WebEntityListBindingSource dsrrigationQuotes
{ 
  get 
  {
    if (_dsrrigationQuotes == null)
    {
             _dsrrigationQuotes = new Sage.Platform.WebPortal.Binding.WebEntityListBindingSource(typeof(Sage.Entity.Interfaces.IIrrigationQuote), 
	    EntityType              ,"IrrigationQuotes", System.Reflection.MemberTypes.Property);
                   _dsrrigationQuotes.UseSmartQuery = true;
      	   	}
 	return _dsrrigationQuotes;
  }
}

void dsrrigationQuotes_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dsrrigationQuotes.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dsrrigationQuotes);
   }
}

 



 

protected override void OnAddEntityBindings() {
       dsrrigationQuotes.Bindings.Add(new Sage.Platform.WebPortal.Binding.WebEntityListBinding("IrrigationQuotes", grdrrigationQuotes ));
   dsrrigationQuotes.BindFieldNames = new String[] { "Id","DocumentNo","IssuedDate","QuoteDescription","ValidTo" };
     
     BindingSource.OnCurrentEntitySet += new EventHandler(dsrrigationQuotes_OnCurrentEntitySet);
    
    }
       
protected void grdrrigationQuotes_RowSelectedAction(object sender, EventArgs e) {
      Response.Redirect(string.Format("IrrigationQuote.aspx?entityId={0}", (this.BindingSource.Current as Sage.Platform.ComponentModel.IComponentReference).Id));
  
}
protected void QFButton_ClickAction(object sender, EventArgs e) {
if (DialogService != null)
{
  // InsertChildDialogActionItem
  DialogService.SetSpecs(600, 800, "NewIrrigationQuote", GetLocalResourceObject("7371a279-c15e-4745-8003-0e737545dd4a.DialogTitleOverride").ToString() );
  DialogService.EntityType = typeof(Sage.Entity.Interfaces.IIrrigationQuote); 
  DialogService.SetChildIsertInfo(
    typeof(Sage.Entity.Interfaces.IIrrigationQuote),
    typeof(Sage.Entity.Interfaces.IAccount),
    typeof(Sage.Entity.Interfaces.IIrrigationQuote).GetProperty("Account"),
    typeof(Sage.Entity.Interfaces.IAccount).GetProperty("IrrigationQuotes"));
  DialogService.ShowDialog();
}
  Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
    if (refresher != null) {
      refresher.RefreshAll();
    }
    else {  
      Response.Redirect(Request.Url.ToString());
    }

}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 grdrrigationQuotes.SelectedIndexChanged += new EventHandler(grdrrigationQuotes_RowSelectedAction);
QFButton.Click += new ImageClickEventHandler(QFButton_ClickAction);


}

protected override void OnFormBound()
{
if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
if (dsrrigationQuotes.SourceObject == null) { dsrrigationQuotes.SourceObject = BindingSource.Current; }
if (dsrrigationQuotes.SourceObject == null) { RegisterBindingsWithClient(dsrrigationQuotes); }
dsrrigationQuotes.Bind();

ClientBindingMgr.SetFocusTo(grdrrigationQuotes);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new AccountIrrigationQuotesAdapter(this)); }
}

public class AccountIrrigationQuotesAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IAccountIrrigationQuotes
{
    public AccountIrrigationQuotesAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.IDataGridControl _grdrrigationQuotes;
    public  Sage.Platform.Controls.IDataGridControl grdrrigationQuotes
    {
        get { return FindControl(ref _grdrrigationQuotes, "grdrrigationQuotes"); }
    }
    private Sage.Platform.Controls.IDataSourceControl _dsrrigationQuotes;
    public  Sage.Platform.Controls.IDataSourceControl dsrrigationQuotes
    {
        get { return FindControl(ref _dsrrigationQuotes, "dsrrigationQuotes"); }
    }
    private Sage.Platform.Controls.IButtonControl _QFButton;
    public  Sage.Platform.Controls.IButtonControl QFButton
    {
        get { return FindControl(ref _QFButton, "QFButton"); }
    }

}

</script>

<script type="text/javascript">
</script>
