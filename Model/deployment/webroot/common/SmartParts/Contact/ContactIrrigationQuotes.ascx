<%@ Control Language="C#" ClassName="ContactIrrigationQuotes" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
  <SalesLogix:SlxGridView runat="server" ID="grdrrigationQuotes" GridLines="None"
AutoGenerateColumns="false" CellPadding="4" CssClass="datagrid" PagerStyle-CssClass="gridPager"
AlternatingRowStyle-CssClass="rowdk" RowStyle-CssClass="rowlt" SelectedRowStyle-CssClass="rowSelected" ShowEmptyTable="true" EnableViewState="false"
 AllowPaging="true" PageSize="20" OnPageIndexChanging="grdrrigationQuotespage_changing"  ExpandableRows="True" ResizableColumns="True"  AllowSorting="true" OnSorting="grdrrigationQuotes_Sorting"  ShowSortIcon="true" >
<Columns>
   <asp:BoundField DataField="DocumentNo"
      HeaderText="<%$ resources: grdrrigationQuotes.bc24eede-bfa4-48e2-a7ab-26d0707c2386.ColumnHeading %>"          >
      </asp:BoundField>
    <asp:BoundField DataField="IssuedDate"
  DataFormatString="<%$ resources: grdrrigationQuotes.19fb917a-c6a3-4453-b6da-ba1247120682.FormatString %>" HtmlEncode="false"    HeaderText="<%$ resources: grdrrigationQuotes.19fb917a-c6a3-4453-b6da-ba1247120682.ColumnHeading %>"       SortExpression="IssuedDate"    >
      </asp:BoundField>
    <asp:BoundField DataField="QuoteDescription"
      HeaderText="<%$ resources: grdrrigationQuotes.88dd8402-4a74-45f3-be91-b1476aa1d9a7.ColumnHeading %>"          >
      </asp:BoundField>
    <asp:BoundField DataField="ValidTo"
  DataFormatString="<%$ resources: grdrrigationQuotes.978a9445-238e-43ea-a6bc-ce16850cd6e6.FormatString %>" HtmlEncode="false"    HeaderText="<%$ resources: grdrrigationQuotes.978a9445-238e-43ea-a6bc-ce16850cd6e6.ColumnHeading %>"       SortExpression="ValidTo"    >
      </asp:BoundField>
 </Columns>
    <PagerSettings Mode="NumericFirstLast" FirstPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=Start_16x16" LastPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=End_16x16" />
</SalesLogix:SlxGridView>

<script runat="server" type="text/C#">


protected void grdrrigationQuotespage_changing(object sender, GridViewPageEventArgs e)
{
 grdrrigationQuotes.PageIndex = e.NewPageIndex;
 grdrrigationQuotes.DataBind();
}
protected void grdrrigationQuotes_Sorting(object sender, GridViewSortEventArgs e) { }
</script>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="ContactIrrigationQuotes_RTools" ToolbarLocation="right">
    <asp:ImageButton runat="server" ID="QFButton"
 AlternateText="<%$ resources: QFButton.Caption %>"  ToolTip="<%$ resources: QFButton.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=contract_new_16x16"  />
 
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=ContactIrrigationQuotes&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkContactIrrigationQuotesHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="ContactIrrigationQuotes" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IContact); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityListBindingSource _dsrrigationQuotes;
public Sage.Platform.WebPortal.Binding.WebEntityListBindingSource dsrrigationQuotes
{ 
  get 
  {
    if (_dsrrigationQuotes == null)
    {
             _dsrrigationQuotes = new Sage.Platform.WebPortal.Binding.WebEntityListBindingSource(typeof(Sage.Entity.Interfaces.IIrrigationQuote), 
	    EntityType              ,"IrrigationQuotes", System.Reflection.MemberTypes.Property);
                   _dsrrigationQuotes.UseSmartQuery = true;
      	   	}
 	return _dsrrigationQuotes;
  }
}

void dsrrigationQuotes_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dsrrigationQuotes.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dsrrigationQuotes);
   }
}

 



 

protected override void OnAddEntityBindings() {
       dsrrigationQuotes.Bindings.Add(new Sage.Platform.WebPortal.Binding.WebEntityListBinding("IrrigationQuotes", grdrrigationQuotes ));
   dsrrigationQuotes.BindFieldNames = new String[] { "Id","DocumentNo","IssuedDate","QuoteDescription","ValidTo" };
     
     BindingSource.OnCurrentEntitySet += new EventHandler(dsrrigationQuotes_OnCurrentEntitySet);
    
    }
       
protected void QFButton_ClickAction(object sender, EventArgs e) {
if (DialogService != null)
{
  // InsertChildDialogActionItem
  DialogService.SetSpecs(400, 600, "NewIrrigationQuote", GetLocalResourceObject("5e79eb59-f944-4825-ae08-0cfb5180547b.DialogTitleOverride").ToString() );
  DialogService.EntityType = typeof(Sage.Entity.Interfaces.IIrrigationQuote); 
  DialogService.SetChildIsertInfo(
    typeof(Sage.Entity.Interfaces.IIrrigationQuote),
    typeof(Sage.Entity.Interfaces.IContact),
    typeof(Sage.Entity.Interfaces.IIrrigationQuote).GetProperty("Contact"),
    typeof(Sage.Entity.Interfaces.IContact).GetProperty("IrrigationQuotes"));
  DialogService.ShowDialog();
}
  Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
    if (refresher != null) {
      refresher.RefreshAll();
    }
    else {  
      Response.Redirect(Request.Url.ToString());
    }

}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 QFButton.Click += new ImageClickEventHandler(QFButton_ClickAction);


}

protected override void OnFormBound()
{
if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
if (dsrrigationQuotes.SourceObject == null) { dsrrigationQuotes.SourceObject = BindingSource.Current; }
if (dsrrigationQuotes.SourceObject == null) { RegisterBindingsWithClient(dsrrigationQuotes); }
dsrrigationQuotes.Bind();



}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
        if (BindingSource != null)
    {
        if (BindingSource.Current != null)
        {
            tinfo.Description = BindingSource.Current.ToString();
            tinfo.Title = BindingSource.Current.ToString();
        }
    }
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new ContactIrrigationQuotesAdapter(this)); }
}

public class ContactIrrigationQuotesAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IContactIrrigationQuotes
{
    public ContactIrrigationQuotesAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.IDataGridControl _grdrrigationQuotes;
    public  Sage.Platform.Controls.IDataGridControl grdrrigationQuotes
    {
        get { return FindControl(ref _grdrrigationQuotes, "grdrrigationQuotes"); }
    }
    private Sage.Platform.Controls.IDataSourceControl _dsrrigationQuotes;
    public  Sage.Platform.Controls.IDataSourceControl dsrrigationQuotes
    {
        get { return FindControl(ref _dsrrigationQuotes, "dsrrigationQuotes"); }
    }
    private Sage.Platform.Controls.IButtonControl _QFButton;
    public  Sage.Platform.Controls.IButtonControl QFButton
    {
        get { return FindControl(ref _QFButton, "QFButton"); }
    }

}

</script>

<script type="text/javascript">
</script>
